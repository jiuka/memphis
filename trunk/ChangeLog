0.2.3  20. June 2010
  Bugfix release:
   * Remove bashisms from configure.ac.
   * Vala example: Fix circular libmemphis dependency (Łukasz Jernaś).
   * Fix a segfault in the rules parser on big-endian machines.
   * Install the default rules set (default-rules.xml).
   * Fix the parsing of doubles in certain locales.
   * Sync the default rules set with the champlain demo.

0.2.2  24. May 2010
   * Add Vala bindings and a Vala example.
   * Make MemphisRuleAttr a GBoxed type. (Emmanuel Rodriguez) 
   * Declare MemphisRuleType as a real GEnum. (Emmanuel Rodriguez)
   * Bugfixes and documentation updates.

0.2.1  3. March 2010
  Bugfix release:
   * Explicitly link against libmath (-lm)
   * Make Memphis build without gobject-instrospection
   * Bugfix: renderer_tile_has_data always returns FALSE

0.2.0  27. February 2010

  Big libmemphis infrastructure and bugfix release.

  API changes:
   * Rename memphis_renderer_set_rules_set to renderer_set_rule_set.
   * Add error handling to all file and parsing related functions.
     All *_load_from_file and *_load_from_data functions are affected.

  What's new?
   * Support for background color transparency.
   * Gobject-introspection support. You can now write Memphis
     applications in Javascript and all other languages that use Gir
     or Typelib introspection files. But be aware that the Cairo
     introspection support is still buggy and incomplete.
   * Gtk-Doc documenation generation (HTML or via Devhelp).
   * Code cleanup and minor bugfixes.

  Known Bugs:
   * Conditional drawing rules are broken and should not be used.

0.1.0  25. October 2009

    The first release of Memphis and libmemphis.

    Memphis draws a single PNG image of your map data.
    Libmemphis additionally implements the 'Slippy Map Tilename'
    specification, like Mapnik and Osmarender. Memphis and libmemphis
    support zoom level 12 to 18, projected with the Mercator
    projection.

    Key features:
     * Parsing of nodes and ways from a OSM XML export file.
     * XML file format to define rendering style rules.
     * Dynamic adaptable drawing rules.
     * Cairo rendering engine.
     * GObject based API.

	Known Bugs:
	 * Conditional drawing rules are broken and should not be used.
